package vendingmachine;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import com.google.common.collect.Ranges;

public class Simulator{
	private static final Sequence FIRST_SEQUENCE= new VendingMachineSelectionSequence();
	
	static interface Sequence{
		Sequence next();
	}
	
	static class VendingMachineSelectionSequence implements Sequence{
		@Override
		public Sequence next(){
			System.out.println("購入する自動販売機を選択してください。");
			System.out.print("[1:ドリンク 2:終了]>");
			int i= selectIdx(1, 2);
			
			if(i == 1){
				System.out.println("ドリンクの自動販売機です。");
				return new OperationSelectionSequence();
			}
			return null;
		}
	}
	
	static class OperationSelectionSequence implements Sequence{
		@Override
		public Sequence next(){
			System.out.println("操作を選択してください。");
			System.out.print("[1:コインを入れる 2:買う 3:コインを戻す 4:終了]>");
			int i= selectIdx(1, 4);
			
			switch(i){
				case 1:
				return new CoinSelectionSequence();
				case 2:
					return new ProductSelectionSequence();
				case 3:
				case 4:
					return null; // payback
			}
			
			return this;
		}
	}
	
	static class CoinSelectionSequence implements Sequence{
		@Override
		public Sequence next(){
			// TODO Auto-generated method stub
			return null;
		}
	}
	
	static class ProductSelectionSequence implements Sequence{
		@Override
		public Sequence next(){
			// TODO Auto-generated method stub
			return null;
		}
	}
	
	public static void main(String[] args){
		// 自販機選択
		Sequence seq= Simulator.FIRST_SEQUENCE;
		while(true){
			seq= seq.next();
		}
		// 買い物結果表示
	}
	
	static int selectIdx(int min, int max){
		BufferedReader r= new BufferedReader(new InputStreamReader(System.in));
		
		try{
			int i;
			do{
				String input= r.readLine();
				
				i= Integer.parseInt(input);
				
			}while( !Ranges.closed(min, max).apply(i));
			return i;
		}
		catch(IOException e){
			throw new RuntimeException(e);
		}
	}
}
